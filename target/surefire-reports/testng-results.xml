<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="6" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-07T23:32:28 IST" name="Suite" finished-at="2025-08-07T23:37:03 IST" duration-ms="275324">
    <groups>
    </groups>
    <test started-at="2025-08-07T23:32:28 IST" name="Test" finished-at="2025-08-07T23:37:03 IST" duration-ms="275324">
      <class name="smoke.TC_119">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:smoke.TC_119@313ac989]" started-at="2025-08-07T23:33:08 IST" name="setUp" finished-at="2025-08-07T23:33:11 IST" duration-ms="2792" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void smoke.TC_119.toCancelGeneratedOrderTC119(java.util.HashMap)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="toCancelGeneratedOrderTC119(java.util.HashMap)[pri:0, instance:smoke.TC_119@313ac989]" started-at="2025-08-07T23:33:11 IST" name="toCancelGeneratedOrderTC119" data-provider="getTestData" finished-at="2025-08-07T23:35:53 IST" duration-ms="161422" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ExpiryDateYear=2030, FirstName=Samad, verifyResult=0 result(s) found, numberOfRooms=2, ExpiryDateMonth=12, CreditCardType=AMEX, checkInDate=01/12/2025, CVVNumber=123, BillingAddress=near near beside beside, CreditCardNo=1234567891234567, adultsPerRoom=1, verifyCancelled=The booking has been cancelled, password=shaik123samad, checkOutDate=02/12/2025, hotels=Hotel Creek, location=Sydney, LastName=Shaik, roomType=Standard, username=Shaik123samad}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toCancelGeneratedOrderTC119 -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:smoke.TC_119@313ac989]" started-at="2025-08-07T23:35:53 IST" name="teardown" finished-at="2025-08-07T23:35:56 IST" duration-ms="3210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- smoke.TC_119 -->
      <class name="smoke.TC_120">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:smoke.TC_120@4562e04d]" started-at="2025-08-07T23:35:56 IST" name="setUp" finished-at="2025-08-07T23:36:01 IST" duration-ms="5314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void smoke.TC_120.ToVerifyAllPagesTitlesTC120(java.util.HashMap) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ToVerifyAllPagesTitlesTC120(java.util.HashMap)[pri:0, instance:smoke.TC_120@4562e04d]" started-at="2025-08-07T23:36:01 IST" name="ToVerifyAllPagesTitlesTC120" data-provider="getTestData" finished-at="2025-08-07T23:37:00 IST" duration-ms="58453" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ExpiryDateYear=2030, FirstName=Samad, numberOfRooms=2, ExpiryDateMonth=12, CreditCardType=AMEX, checkInDate=01/12/2025, CVVNumber=123, BillingAddress=near near beside beside, CreditCardNo=1234567891234567, adultsPerRoom=1, password=shaik123samad, checkOutDate=02/12/2025, hotels=Hotel Creek, location=Sydney, LastName=Shaik, roomType=Standard, username=Shaik123samad}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToVerifyAllPagesTitlesTC120 -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:smoke.TC_120@4562e04d]" started-at="2025-08-07T23:37:00 IST" name="teardown" finished-at="2025-08-07T23:37:03 IST" duration-ms="3202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- smoke.TC_120 -->
      <class name="smoke.TC_101">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:smoke.TC_101@2a3b5b47]" started-at="2025-08-07T23:32:28 IST" name="beforeTest" finished-at="2025-08-07T23:32:28 IST" duration-ms="350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:smoke.TC_101@2a3b5b47]" started-at="2025-08-07T23:32:30 IST" name="setUp" finished-at="2025-08-07T23:32:38 IST" duration-ms="8319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void smoke.TC_101.validLoginDetailsTC101(java.util.HashMap)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validLoginDetailsTC101(java.util.HashMap)[pri:0, instance:smoke.TC_101@2a3b5b47]" started-at="2025-08-07T23:32:38 IST" name="validLoginDetailsTC101" data-provider="getTestData" finished-at="2025-08-07T23:32:39 IST" duration-ms="1316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=shaik123samad, username=Shaik123samad}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginDetailsTC101 -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:smoke.TC_101@2a3b5b47]" started-at="2025-08-07T23:32:39 IST" name="teardown" finished-at="2025-08-07T23:32:43 IST" duration-ms="3217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="reportsEnd()[pri:0, instance:smoke.TC_101@2a3b5b47]" started-at="2025-08-07T23:37:03 IST" name="reportsEnd" finished-at="2025-08-07T23:37:03 IST" duration-ms="544" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportsEnd -->
      </class> <!-- smoke.TC_101 -->
      <class name="smoke.TC_102">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:smoke.TC_102@4c371370]" started-at="2025-08-07T23:32:43 IST" name="setUp" finished-at="2025-08-07T23:32:46 IST" duration-ms="3254" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void smoke.TC_102.verifyCheckOutDateTC102(java.util.HashMap)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCheckOutDateTC102(java.util.HashMap)[pri:0, instance:smoke.TC_102@4c371370]" started-at="2025-08-07T23:32:46 IST" name="verifyCheckOutDateTC102" data-provider="getTestData" finished-at="2025-08-07T23:32:48 IST" duration-ms="2113" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=shaik123samad, checkOutDate=25/11/2025, hotels=Hotel Creek, location=Sydney, numberOfRooms=1, checkInError=Check-In Date shall be before than Check-Out Date, checkInDate=01/12/2025, roomType=Standard, checkOutError=Check-Out Date shall be after than Check-In Date, username=Shaik123samad}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCheckOutDateTC102 -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:smoke.TC_102@4c371370]" started-at="2025-08-07T23:32:48 IST" name="teardown" finished-at="2025-08-07T23:32:51 IST" duration-ms="3170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- smoke.TC_102 -->
      <class name="smoke.TC_103">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:smoke.TC_103@145f66e3]" started-at="2025-08-07T23:32:51 IST" name="setUp" finished-at="2025-08-07T23:32:54 IST" duration-ms="2849" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void smoke.TC_103.verifyPastDatesTC103(java.util.HashMap)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPastDatesTC103(java.util.HashMap)[pri:0, instance:smoke.TC_103@145f66e3]" started-at="2025-08-07T23:32:54 IST" name="verifyPastDatesTC103" data-provider="getTestData" finished-at="2025-08-07T23:32:56 IST" duration-ms="1976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=shaik123samad, checkOutDate=02/04/2025, hotels=Hotel Creek, location=Sydney, numberOfRooms=1, checkInError=Check-In Date should be either Today or Later Date, checkInDate=01/04/2025, roomType=Standard, username=Shaik123samad}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPastDatesTC103 -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:smoke.TC_103@145f66e3]" started-at="2025-08-07T23:32:56 IST" name="teardown" finished-at="2025-08-07T23:32:59 IST" duration-ms="3200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- smoke.TC_103 -->
      <class name="smoke.TC_104">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:smoke.TC_104@3023df74]" started-at="2025-08-07T23:32:59 IST" name="setUp" finished-at="2025-08-07T23:33:02 IST" duration-ms="3037" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void smoke.TC_104.verifySelectHotelLocationTC104(java.util.HashMap)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySelectHotelLocationTC104(java.util.HashMap)[pri:0, instance:smoke.TC_104@3023df74]" started-at="2025-08-07T23:33:02 IST" name="verifySelectHotelLocationTC104" data-provider="getTestData" finished-at="2025-08-07T23:33:05 IST" duration-ms="2484" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=shaik123samad, checkOutDate=02/12/2025, hotels=Hotel Creek, verifyLocation=Sydney, location=Sydney, numberOfRooms=1, checkInDate=01/12/2025, roomType=Standard, username=Shaik123samad}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySelectHotelLocationTC104 -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:smoke.TC_104@3023df74]" started-at="2025-08-07T23:33:05 IST" name="teardown" finished-at="2025-08-07T23:33:08 IST" duration-ms="3205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- smoke.TC_104 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
