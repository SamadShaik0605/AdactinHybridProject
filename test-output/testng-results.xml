<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="10" total="16" passed="6" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-08T13:30:50 IST" name="Suite" finished-at="2025-08-08T13:33:52 IST" duration-ms="181933">
    <groups>
    </groups>
    <test started-at="2025-08-08T13:30:50 IST" name="Test" finished-at="2025-08-08T13:33:52 IST" duration-ms="181933">
      <class name="smoke.TC_119">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:smoke.TC_119@25641d39]" started-at="2025-08-08T13:31:30 IST" name="setUp" finished-at="2025-08-08T13:31:33 IST" duration-ms="2638" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void smoke.TC_119.toCancelGeneratedOrderTC119(java.util.HashMap)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="toCancelGeneratedOrderTC119(java.util.HashMap)[pri:0, instance:smoke.TC_119@25641d39]" started-at="2025-08-08T13:31:33 IST" name="toCancelGeneratedOrderTC119" data-provider="getTestData" finished-at="2025-08-08T13:32:57 IST" duration-ms="84169" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ExpiryDateYear=2030, FirstName=Samad, verifyResult=0 result(s) found, numberOfRooms=2, ExpiryDateMonth=12, CreditCardType=AMEX, checkInDate=01/12/2025, CVVNumber=123, BillingAddress=near near beside beside, CreditCardNo=1234567891234567, adultsPerRoom=1, verifyCancelled=The booking has been cancelled, password=shaik123samad, checkOutDate=02/12/2025, hotels=Hotel Creek, location=Sydney, LastName=Shaik, roomType=Standard, username=Shaik123samad}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toCancelGeneratedOrderTC119 -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:smoke.TC_119@25641d39]" started-at="2025-08-08T13:32:57 IST" name="teardown" finished-at="2025-08-08T13:33:00 IST" duration-ms="3460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- smoke.TC_119 -->
      <class name="smoke.TC_120">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:smoke.TC_120@7b36aa0c]" started-at="2025-08-08T13:33:00 IST" name="setUp" finished-at="2025-08-08T13:33:03 IST" duration-ms="2897" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void smoke.TC_120.ToVerifyAllPagesTitlesTC120(java.util.HashMap) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ToVerifyAllPagesTitlesTC120(java.util.HashMap)[pri:0, instance:smoke.TC_120@7b36aa0c]" started-at="2025-08-08T13:33:03 IST" name="ToVerifyAllPagesTitlesTC120" data-provider="getTestData" finished-at="2025-08-08T13:33:48 IST" duration-ms="44425" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ExpiryDateYear=2030, FirstName=Samad, numberOfRooms=2, ExpiryDateMonth=12, CreditCardType=AMEX, checkInDate=01/12/2025, CVVNumber=123, BillingAddress=near near beside beside, CreditCardNo=1234567891234567, adultsPerRoom=1, password=shaik123samad, checkOutDate=02/12/2025, hotels=Hotel Creek, location=Sydney, LastName=Shaik, roomType=Standard, username=Shaik123samad}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToVerifyAllPagesTitlesTC120 -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:smoke.TC_120@7b36aa0c]" started-at="2025-08-08T13:33:48 IST" name="teardown" finished-at="2025-08-08T13:33:51 IST" duration-ms="3459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- smoke.TC_120 -->
      <class name="smoke.TC_101">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:smoke.TC_101@2e3967ea]" started-at="2025-08-08T13:30:50 IST" name="beforeTest" finished-at="2025-08-08T13:30:51 IST" duration-ms="615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:smoke.TC_101@2e3967ea]" started-at="2025-08-08T13:30:52 IST" name="setUp" finished-at="2025-08-08T13:30:59 IST" duration-ms="6448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void smoke.TC_101.validLoginDetailsTC101(java.util.HashMap)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validLoginDetailsTC101(java.util.HashMap)[pri:0, instance:smoke.TC_101@2e3967ea]" started-at="2025-08-08T13:30:59 IST" name="validLoginDetailsTC101" data-provider="getTestData" finished-at="2025-08-08T13:31:01 IST" duration-ms="1796" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=shaik123samad, username=Shaik123samad}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginDetailsTC101 -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:smoke.TC_101@2e3967ea]" started-at="2025-08-08T13:31:01 IST" name="teardown" finished-at="2025-08-08T13:31:05 IST" duration-ms="3508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="reportsEnd()[pri:0, instance:smoke.TC_101@2e3967ea]" started-at="2025-08-08T13:33:51 IST" name="reportsEnd" finished-at="2025-08-08T13:33:52 IST" duration-ms="597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportsEnd -->
      </class> <!-- smoke.TC_101 -->
      <class name="smoke.TC_102">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:smoke.TC_102@52719fb6]" started-at="2025-08-08T13:31:05 IST" name="setUp" finished-at="2025-08-08T13:31:08 IST" duration-ms="2923" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void smoke.TC_102.verifyCheckOutDateTC102(java.util.HashMap)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCheckOutDateTC102(java.util.HashMap)[pri:0, instance:smoke.TC_102@52719fb6]" started-at="2025-08-08T13:31:08 IST" name="verifyCheckOutDateTC102" data-provider="getTestData" finished-at="2025-08-08T13:31:10 IST" duration-ms="2116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=shaik123samad, checkOutDate=25/11/2025, hotels=Hotel Creek, location=Sydney, numberOfRooms=1, checkInError=Check-In Date shall be before than Check-Out Date, checkInDate=01/12/2025, roomType=Standard, checkOutError=Check-Out Date shall be after than Check-In Date, username=Shaik123samad}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCheckOutDateTC102 -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:smoke.TC_102@52719fb6]" started-at="2025-08-08T13:31:10 IST" name="teardown" finished-at="2025-08-08T13:31:13 IST" duration-ms="3463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- smoke.TC_102 -->
      <class name="smoke.TC_103">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:smoke.TC_103@3012646b]" started-at="2025-08-08T13:31:13 IST" name="setUp" finished-at="2025-08-08T13:31:16 IST" duration-ms="2636" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void smoke.TC_103.verifyPastDatesTC103(java.util.HashMap)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPastDatesTC103(java.util.HashMap)[pri:0, instance:smoke.TC_103@3012646b]" started-at="2025-08-08T13:31:16 IST" name="verifyPastDatesTC103" data-provider="getTestData" finished-at="2025-08-08T13:31:18 IST" duration-ms="1930" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=shaik123samad, checkOutDate=02/04/2025, hotels=Hotel Creek, location=Sydney, numberOfRooms=1, checkInError=Check-In Date should be either Today or Later Date, checkInDate=01/04/2025, roomType=Standard, username=Shaik123samad}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPastDatesTC103 -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:smoke.TC_103@3012646b]" started-at="2025-08-08T13:31:18 IST" name="teardown" finished-at="2025-08-08T13:31:21 IST" duration-ms="3349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- smoke.TC_103 -->
      <class name="smoke.TC_104">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:smoke.TC_104@4a883b15]" started-at="2025-08-08T13:31:21 IST" name="setUp" finished-at="2025-08-08T13:31:24 IST" duration-ms="2644" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void smoke.TC_104.verifySelectHotelLocationTC104(java.util.HashMap)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySelectHotelLocationTC104(java.util.HashMap)[pri:0, instance:smoke.TC_104@4a883b15]" started-at="2025-08-08T13:31:24 IST" name="verifySelectHotelLocationTC104" data-provider="getTestData" finished-at="2025-08-08T13:31:26 IST" duration-ms="2401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=shaik123samad, checkOutDate=02/12/2025, hotels=Hotel Creek, verifyLocation=Sydney, location=Sydney, numberOfRooms=1, checkInDate=01/12/2025, roomType=Standard, username=Shaik123samad}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySelectHotelLocationTC104 -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:smoke.TC_104@4a883b15]" started-at="2025-08-08T13:31:27 IST" name="teardown" finished-at="2025-08-08T13:31:30 IST" duration-ms="3369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- smoke.TC_104 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
